# =============================================================================
# OPRINA FRONTEND - PRODUCTION REFERENCE
# =============================================================================
#
# üìÅ FILE LOCATION: frontend/.env-production.example (REFERENCE ONLY)
#
# üö® IMPORTANT: THIS FILE IS NOT USED DIRECTLY IN PRODUCTION!
# - This is a reference template for production environment variables
# - In production, set these variables in your deployment platform dashboard
# - Vercel/Netlify automatically build with platform environment variables
# - This file is for copying values to your deployment platform
#
# üîÑ HOW PRODUCTION ACTUALLY WORKS:
# - Platform (Vercel/Netlify) sets environment variables in their dashboard
# - Platform builds your app with those variables
# - No .env file needed in production deployment
#
# üöÄ USAGE:
# 1. Copy values from this file
# 2. Set them in your deployment platform (Vercel dashboard, Netlify settings, etc.)
# 3. Deploy via git push (platform handles the rest)
#
# ‚ö° DEPLOYMENT PRIORITY:
# 1. üü• UPDATE IMMEDIATELY (Backend URLs change in production)
# 2. üü® VERIFY SETTINGS (Feature flags for production)
# 3. üü© SAME AS DEV (Database and API settings usually identical)
#
# =============================================================================

# =============================================================================
# üü• UPDATE IMMEDIATELY - PRODUCTION URLs
# =============================================================================

# Backend Connection - UPDATE with your actual Cloud Run URL
VITE_BACKEND_URL=https://your-backend-service.us-central1.run.app

# =============================================================================
# üü© SAME AS DEVELOPMENT - NO CHANGES NEEDED
# =============================================================================

# Supabase Configuration (same database for dev and prod)
VITE_SUPABASE_URL=https://your-project-id.supabase.co
VITE_SUPABASE_ANON_KEY=your-supabase-anon-key-here

# HeyGen Configuration (same API keys work for both)
VITE_HEYGEN_API_KEY=your-heygen-api-key-here
VITE_HEYGEN_API_URL=https://api.heygen.com/
VITE_HEYGEN_AVATAR_ID=Ann_Therapist_public

# Server-side HeyGen (for backend operations)
HEYGEN_API_KEY=your-heygen-api-key-here

# Avatar Settings (usually same as development)
VITE_USE_STATIC_AVATAR=true
VITE_ENABLE_AVATAR_SELECTOR=false
VITE_CACHE_AVATAR_IMAGES=true

# =============================================================================
# üü® PRODUCTION-SPECIFIC SETTINGS
# =============================================================================

# Development UI Controls (hide in production)
VITE_SHOW_AVATAR_TOGGLE=true

# Debug Settings (disable detailed logging in production)
VITE_DEBUG_AVATAR_API=false

# =============================================================================
# üöÄ ACTUAL PRODUCTION DEPLOYMENT METHODS
# =============================================================================
#
# VERCEL DEPLOYMENT (Recommended):
# 1. Go to Vercel dashboard ‚Üí Your project ‚Üí Settings ‚Üí Environment Variables
# 2. Add each VITE_ variable from this reference file
# 3. Set Environment: Production
# 4. Deploy: git push (automatic deployment)
# 5. Vercel uses dashboard variables, NOT this file
#
# NETLIFY DEPLOYMENT:
# 1. Go to Netlify dashboard ‚Üí Site settings ‚Üí Build & deploy ‚Üí Environment variables
# 2. Add each VITE_ variable from this reference file  
# 3. Trigger new deploy
# 4. Netlify uses dashboard variables, NOT this file
#
# GITHUB PAGES / OTHER PLATFORMS:
# 1. Set environment variables in your CI/CD pipeline
# 2. Platform builds with those variables
# 3. This file is only for reference of what to set
#
# =============================================================================
# üîç PRODUCTION VERIFICATION CHECKLIST
# =============================================================================
#
# ‚úÖ BACKEND CONNECTION:
# - [ ] VITE_BACKEND_URL points to your deployed backend
# - [ ] API calls work from production frontend to backend
# - [ ] CORS is configured to allow your frontend domain
#
# ‚úÖ AUTHENTICATION:
# - [ ] Supabase login/signup works
# - [ ] JWT tokens are validated by backend
# - [ ] User sessions persist correctly
#
# ‚úÖ AVATAR FUNCTIONALITY:
# - [ ] HeyGen API calls work in production
# - [ ] Avatar images load correctly
# - [ ] Streaming/static mode works as configured
#
# ‚úÖ FEATURE FLAGS:
# - [ ] Debug settings disabled (VITE_DEBUG_AVATAR_API=false)
# - [ ] UI shows/hides features as intended
# - [ ] Performance optimizations enabled
#
# =============================================================================
# üß™ PRODUCTION TESTING COMMANDS
# =============================================================================
#
# Test backend connection:
# curl https://your-frontend-domain.com/api/health
#
# Check environment variables in production:
# 1. Open browser dev tools
# 2. Console: console.log(import.meta.env.VITE_BACKEND_URL)
# 3. Should show production URL
#
# Test authentication flow:
# 1. Visit your production site
# 2. Try login/signup
# 3. Check Network tab for API calls to backend
#
# =============================================================================
# üîß ENVIRONMENT DIFFERENCES SUMMARY
# =============================================================================
#
# DEVELOPMENT vs PRODUCTION:
#
# Backend URL:
# - Dev:  http://localhost:8000
# - Prod: https://your-backend.run.app
#
# Debug Settings:
# - Dev:  VITE_DEBUG_AVATAR_API=true (detailed logging)
# - Prod: VITE_DEBUG_AVATAR_API=false (clean console)
#
# Avatar Toggle:
# - Dev:  VITE_SHOW_AVATAR_TOGGLE=true (testing UI)
# - Prod: VITE_SHOW_AVATAR_TOGGLE=true (user choice) or false (fixed)
#
# Everything Else:
# - Same Supabase configuration
# - Same HeyGen configuration  
# - Same feature flags
# - Same avatar settings
#
# =============================================================================
# üö® PRODUCTION SECURITY REMINDERS
# =============================================================================
#
# PUBLIC VARIABLES (visible to all users):
# ‚úÖ All VITE_ variables are included in your production bundle
# ‚úÖ Anyone can view these in browser dev tools
# ‚úÖ Never put secrets in VITE_ variables
#
# SAFE FOR PRODUCTION:
# ‚úÖ VITE_SUPABASE_ANON_KEY (designed to be public)
# ‚úÖ VITE_BACKEND_URL (public API endpoint)
# ‚úÖ VITE_HEYGEN_API_KEY (if using client-side operations)
# ‚úÖ Feature flags and UI settings
#
# DEPLOYMENT SECURITY:
# - [ ] Backend CORS configured for your frontend domain
# - [ ] Supabase RLS policies protect sensitive data
# - [ ] HeyGen API key has appropriate rate limits
# - [ ] No sensitive data in client-side code
#
# =============================================================================
# üÜò PRODUCTION TROUBLESHOOTING
# =============================================================================
#
# Common Issues:
#
# ‚ùå "Network Error" ‚Üí Check VITE_BACKEND_URL is correct and accessible
# ‚ùå CORS Error ‚Üí Backend needs to allow your frontend domain in CORS_ORIGINS
# ‚ùå "401 Unauthorized" ‚Üí Supabase keys might not match between frontend/backend
# ‚ùå Avatar not loading ‚Üí Check VITE_HEYGEN_API_KEY and quota limits
# ‚ùå Broken login ‚Üí Verify VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY
#
# Debug Steps:
# 1. Check browser dev tools console for errors
# 2. Check Network tab for failed API calls
# 3. Verify environment variables in console
# 4. Test backend health endpoint directly
# 5. Check deployment platform logs
#
# =============================================================================