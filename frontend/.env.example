# =============================================================================
# OPRINA FRONTEND - LOCAL DEVELOPMENT ENVIRONMENT
# =============================================================================
#
# üìÅ FILE LOCATION: frontend/.env (copy this file and rename)
#
# üîß WHY VITE_ PREFIX:
# - Vite only exposes environment variables that start with VITE_
# - This prevents accidentally exposing server secrets to the client
# - Variables without VITE_ are ignored by Vite build process
#
# üîÑ HOW IT'S LOADED:
# - Vite automatically loads .env files in development
# - Variables become available as import.meta.env.VITE_VARIABLE_NAME
# - Built into the client bundle, so never put secrets here!
#
# üöÄ SETUP:
# 1. Copy this file: cp .env.example .env
# 2. Replace placeholder values with your real credentials
# 3. Run frontend: npm run dev
#
# =============================================================================

# =============================================================================
# üåê BACKEND CONNECTION (REQUIRED)
# =============================================================================

# Backend API URL - Where your FastAPI backend is running
VITE_BACKEND_URL=http://localhost:8000

# =============================================================================
# üóÑÔ∏è SUPABASE CLIENT (REQUIRED for authentication)
# =============================================================================

# Supabase Configuration - Frontend connects directly to Supabase
VITE_SUPABASE_URL=https://your-project-id.supabase.co
VITE_SUPABASE_ANON_KEY=your-supabase-anon-key-here

# =============================================================================
# üé≠ HEYGEN AVATAR SETTINGS (REQUIRED for avatar features)
# =============================================================================

# HeyGen API Configuration
VITE_HEYGEN_API_KEY=your-heygen-api-key-here
VITE_HEYGEN_API_URL=https://api.heygen.com/

# Default Avatar Configuration
VITE_HEYGEN_AVATAR_ID=Ann_Therapist_public

# Server-side HeyGen API Key (for backend operations)
# Note: No VITE_ prefix means this stays server-side only
HEYGEN_API_KEY=your-heygen-api-key-here

# =============================================================================
# üéÆ AVATAR FEATURE FLAGS (OPTIONAL - have defaults)
# =============================================================================

# Avatar Type Control
VITE_USE_STATIC_AVATAR=true

# Avatar Selection Features
VITE_ENABLE_AVATAR_SELECTOR=false
VITE_CACHE_AVATAR_IMAGES=true

# =============================================================================
# üîß DEVELOPMENT SETTINGS (OPTIONAL - for development)
# =============================================================================

# Development UI Controls
VITE_SHOW_AVATAR_TOGGLE=true

# Debug Settings (enable detailed logging)
VITE_DEBUG_AVATAR_API=true

# =============================================================================
# üìù VARIABLE EXPLANATIONS
# =============================================================================
#
# BACKEND CONNECTION:
# - VITE_BACKEND_URL: Your FastAPI backend URL for API calls
#
# SUPABASE CLIENT:
# - VITE_SUPABASE_URL: Direct Supabase connection for auth & real-time features  
# - VITE_SUPABASE_ANON_KEY: Public key for client-side Supabase operations
#
# AVATAR CONFIGURATION:
# - VITE_HEYGEN_API_KEY: Client-side HeyGen API access (public operations)
# - HEYGEN_API_KEY: Server-side HeyGen API access (never exposed to client)
# - VITE_HEYGEN_AVATAR_ID: Default avatar to load
#
# FEATURE FLAGS:
# - VITE_USE_STATIC_AVATAR: true = static images, false = streaming video
# - VITE_ENABLE_AVATAR_SELECTOR: true = show avatar picker in UI
# - VITE_CACHE_AVATAR_IMAGES: true = cache avatar images for performance
#
# DEVELOPMENT SETTINGS:
# - VITE_SHOW_AVATAR_TOGGLE: true = show avatar type toggle in UI
# - VITE_DEBUG_AVATAR_API: true = detailed avatar API logging in console
#
# =============================================================================
# üö® SECURITY NOTES
# =============================================================================
#
# PUBLIC VARIABLES:
# - All VITE_ variables are included in the client bundle
# - Never put secrets in VITE_ variables
# - These values are visible to anyone who views your website
#
# SAFE TO EXPOSE:
# ‚úÖ VITE_SUPABASE_URL (public Supabase endpoint)
# ‚úÖ VITE_SUPABASE_ANON_KEY (designed to be public)
# ‚úÖ VITE_HEYGEN_API_KEY (if using client-side operations)
# ‚úÖ VITE_BACKEND_URL (public API endpoint)
#
# NEVER EXPOSE:
# ‚ùå Database passwords
# ‚ùå Service role keys  
# ‚ùå OAuth client secrets
# ‚ùå Admin tokens
#
# =============================================================================
# üß™ TESTING YOUR SETUP
# =============================================================================
#
# 1. Start the frontend:
#    npm run dev
#
# 2. Check environment variables in browser console:
#    console.log(import.meta.env.VITE_BACKEND_URL)
#
# 3. Test backend connection:
#    Check Network tab - should see calls to VITE_BACKEND_URL
#
# 4. Test Supabase connection:
#    Login should work without errors
#
# 5. Test avatar functionality:
#    Avatar should load and respond based on VITE_USE_STATIC_AVATAR setting
#
# =============================================================================
# üîÑ HOW VARIABLES ARE USED IN CODE
# =============================================================================
#
# In your React components:
# const backendUrl = import.meta.env.VITE_BACKEND_URL
# const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
# const useStaticAvatar = import.meta.env.VITE_USE_STATIC_AVATAR === 'true'
#
# In supabaseClient.ts:
# const supabase = createClient(
#   import.meta.env.VITE_SUPABASE_URL,
#   import.meta.env.VITE_SUPABASE_ANON_KEY
# )
#
# =============================================================================