/* src/styles/AudioFallbackTTS.css */
/* Audio fallback TTS component styles */

.audio-fallback-tts {
  background: white;
  border: 1px solid var(--border, #e5e7eb);
  border-radius: 0.75rem;
  padding: 1rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  min-width: 250px;
}

.audio-fallback-tts.speaking {
  border-left: 4px solid #ff9800;
  background: rgba(255, 152, 0, 0.05);
}

.audio-fallback-tts.unsupported {
  border-left: 4px solid #f44336;
  background: rgba(244, 67, 54, 0.05);
}

/* TTS Status Section */
.tts-status {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
}

.status-indicator {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: rgba(255, 152, 0, 0.1);
  border-radius: 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: #ff9800;
}

.status-icon {
  font-size: 1rem;
  line-height: 1;
}

.status-text {
  font-size: 0.875rem;
  font-weight: 600;
}

/* Sound Waves Animation */
.sound-waves {
  display: flex;
  align-items: flex-end;
  gap: 2px;
  height: 16px;
}

.wave {
  width: 3px;
  height: 4px;
  background: #ff9800;
  border-radius: 1px;
  animation: wave 0.6s ease-in-out infinite alternate;
}

.wave:nth-child(1) {
  animation-delay: 0s;
}

.wave:nth-child(2) {
  animation-delay: 0.1s;
}

.wave:nth-child(3) {
  animation-delay: 0.2s;
}

@keyframes wave {
  0% {
    height: 4px;
    opacity: 0.5;
  }
  100% {
    height: 14px;
    opacity: 1;
  }
}

/* TTS Controls Section */
.tts-controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.tts-info {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-size: 0.75rem;
}

.voice-info,
.config-info {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.label {
  font-weight: 600;
  color: #666;
}

.value {
  color: #333;
  background: #f8f9fa;
  padding: 0.125rem 0.375rem;
  border-radius: 0.25rem;
  font-family: monospace;
}

.queue-info {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem 0.5rem;
  background: rgba(255, 152, 0, 0.1);
  border-radius: 0.375rem;
  border: 1px solid rgba(255, 152, 0, 0.2);
}

.queue-text {
  font-size: 0.75rem;
  font-weight: 500;
  color: #ff9800;
}

/* TTS Action Buttons */
.tts-actions {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.tts-button {
  width: 32px;
  height: 32px;
  border: none;
  border-radius: 0.375rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.stop-button {
  background: rgba(244, 67, 54, 0.1);
  color: #f44336;
  border: 1px solid rgba(244, 67, 54, 0.2);
}

.stop-button:hover {
  background: rgba(244, 67, 54, 0.2);
  transform: scale(1.05);
}

.clear-button {
  background: rgba(156, 163, 175, 0.1);
  color: #6b7280;
  border: 1px solid rgba(156, 163, 175, 0.2);
}

.clear-button:hover {
  background: rgba(156, 163, 175, 0.2);
  transform: scale(1.05);
}

/* Error Display */
.tts-error {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem;
  background: rgba(244, 67, 54, 0.1);
  border: 1px solid rgba(244, 67, 54, 0.2);
  border-radius: 0.5rem;
  margin-top: 1rem;
}

.error-icon {
  font-size: 1rem;
  color: #f44336;
}

.error-text {
  font-size: 0.875rem;
  color: #f44336;
  font-weight: 500;
}

/* Debug Info (development only) */
.tts-debug {
  margin-top: 1rem;
  padding: 0.5rem;
  background: #f8f9fa;
  border-radius: 0.375rem;
  border: 1px solid #e5e7eb;
  font-family: monospace;
  color: #666;
  text-align: center;
}

/* Responsive Design */
@media (max-width: 768px) {
  .audio-fallback-tts {
    min-width: 200px;
    padding: 0.75rem;
  }
  
  .tts-info {
    font-size: 0.625rem;
  }
  
  .config-info {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
  }
  
  .tts-button {
    width: 28px;
    height: 28px;
    font-size: 0.75rem;
  }
}

/* Animation for component appearance */
.audio-fallback-tts {
  animation: slideIn 0.3s ease-out;
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Pulse effect for speaking state */
.audio-fallback-tts.speaking {
  animation: speakingPulse 2s infinite;
}

@keyframes speakingPulse {
  0% {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
  50% {
    box-shadow: 0 2px 8px rgba(255, 152, 0, 0.2), 0 0 0 2px rgba(255, 152, 0, 0.1);
  }
  100% {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
}